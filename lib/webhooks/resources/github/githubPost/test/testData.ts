import {
  RepositoryArchivedEvent,
  RepositoryCreatedEvent,
  RepositoryDeletedEvent,
  RepositoryEditedEvent,
  RepositoryEvent,
} from "@octokit/webhooks-types";
export const generalData: Omit<RepositoryEvent, "action"> = {
  sender: {
    login: "qnerd",
    id: 1,
    node_id: "cg13w",
    avatar_url: "rl9vx",
    gravatar_id: "bosfn",
    url: "e7bpt",
    html_url: "cbxb6",
    followers_url: "p592b",
    following_url: "7h9hr",
    gists_url: "tq8xo",
    starred_url: "1a2s5",
    subscriptions_url: "0irue",
    organizations_url: "m4ts2",
    repos_url: "yr1ok",
    events_url: "zdztc",
    received_events_url: "4cniz",
    type: "User",
    site_admin: false,
    name: "4sq9w",
  },
  repository: {
    name: "hf0l0",
    full_name: "l3tx8",
    owner: {
      login: "84fl0",
      id: 1,
      node_id: "j31p3",
      avatar_url: "vtweo",
      gravatar_id: "5jxuw",
      url: "5ajui",
      html_url: "xt9oi",
      followers_url: "cvprj",
      following_url: "hflgc",
      gists_url: "r5q1j",
      starred_url: "mojlz",
      subscriptions_url: "zyvao",
      organizations_url: "jnaif",
      repos_url: "47ft8",
      events_url: "5nerh",
      received_events_url: "qg36s",
      type: "User",
      site_admin: false,
    },
    id: 1,
    node_id: "9gpn7",
    private: false,
    html_url: "pnc52",
    description: "dgrwc",
    fork: false,
    url: "mvu3a",
    archive_url: "ai7jz",
    assignees_url: "i14ji",
    blobs_url: "646o0",
    branches_url: "hlkzo",
    collaborators_url: "01kb5",
    comments_url: "uzeh5",
    commits_url: "wfl4j",
    compare_url: "s1tt3",
    contents_url: "vd1qk",
    contributors_url: "x4vg1",
    deployments_url: "9lrba",
    created_at: "2011-01-26T19:01:12Z",
    default_branch: "ul08n",
    delete_branch_on_merge: false,
    disabled: false,
    downloads_url: "f12gy",
    events_url: "1x9m7",
    forks_url: "yh1ez",
    git_commits_url: "4r88n",
    git_refs_url: "j6juo",
    git_tags_url: "3lenh",
    git_url: "fxlet",
    has_downloads: false,
    has_issues: false,
    has_pages: false,
    has_projects: false,
    has_wiki: false,
    homepage: "0bm9v",
    hooks_url: "701l2",
    keys_url: "61rsj",
    labels_url: "bfv7h",
    languages_url: "g13on",
    merges_url: "5puh0",
    milestones_url: "7drar",
    mirror_url: "wpsez",
    teams_url: "e32yc",
    trees_url: "7tiyv",
    updated_at: "urbyi",
    releases_url: "e2i0o",
    ssh_url: "gqq5z",
    clone_url: "q32r7",
    svn_url: "cufq9",
    issue_events_url: "1dvaa",
    tags_url: "3kr39",
    statuses_url: "1w2v4",
    stargazers_url: "4jemp",
    subscribers_url: "e28xg",
    subscription_url: "t0y0q",
    issue_comment_url: "8gdjf",
    issues_url: "d1uxj",
    pulls_url: "zjkc3",
    notifications_url: "2kqba",
    pushed_at: "62kr9",
    size: 1,
    stargazers_count: 1,
    watchers_count: 1,
    language: "voafd",
    forks_count: 1,
    archived: false,
    open_issues_count: 1,
    license: {
      key: "g8uq8",
      name: "xg4es",
      spdx_id: "cplf8",
      url: "i4xm9",
      node_id: "wnc29",
    },
    forks: 1,
    open_issues: 1,
    watchers: 1,
    is_template: false,
    web_commit_signoff_required: false,
    topics: [],
    visibility: "public",
    public: true,
  },
};
export const deleteData: RepositoryDeletedEvent = {
  action: "deleted",
  ...generalData,
};
export const createData: RepositoryCreatedEvent = {
  action: "created",
  ...generalData,
};
export const editData: RepositoryEditedEvent = {
  action: "edited",
  ...generalData,
  repository: {
    ...generalData.repository,
    homepage: "test2",
  },
  changes: {
    homepage: { from: "https://github.com/aasmal97/create-react-app-env" },
  },
};
export const archiveData: RepositoryArchivedEvent = {
  action: "archived",
  ...generalData,
  repository: {
    ...generalData.repository,
    archived: true,
  },
};

//import { cloneDeep } from "lodash";
// function replaceStrings<T>(obj: T) {
//   for (var prop in obj) {
//     if (typeof obj[prop] === "object") {
//       replaceStrings(obj[prop]);
//     } else if (typeof obj[prop] === "string") {
//       obj[prop] = Math.random().toString(36).substr(2, 5) as any;
//     }
//   }
//   return obj;
// }
// const deepClone = cloneDeep(generalData);
// console.log(replaceStrings(deepClone));
